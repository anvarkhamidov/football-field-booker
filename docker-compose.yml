version: '3.8'

services:
  web:
    build: .
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: [ "sh", "-c", "python manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000" ]

  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/app
    ports:
      - "8010:8010"
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
